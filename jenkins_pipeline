pipeline {
    agent any

    stages{
        stage('Checkout Code') {
            steps {
                git credentialsId: 'az_credentials', url:'https://DevOpsTestOrgJMD@dev.azure.com/DevOpsTestOrgJMD/ProjectDevOpsTest/_git/ProjectDevOpsTest'
            }
        }
        
        stage('SonarQube Analizer'){
            environment {
                scannerHome = tool 'sonarscanner'
            }
            steps{
                withSonarQubeEnv('SonarQubeDocker'){
                     sh '${scannerHome}/bin/sonar-scanner -X -Dsonar.projectKey=sonarq-project-devops  -Dsonar.sources=src   -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=298a613d80bb4382c1e427b1f8c3bec686f484fe -Dsonar.sourceEncoding=UTF-8 -Dsonar.language=ts -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info -Dsonar.exclusions=node_modules/*,**/*.spec.ts'
                }
            }
                
        }
        
         stage("Quality Gate"){
            steps{
                
                 timeout(time: 2, unit: 'MINUTES') {
                     script {
                     def qg = waitForQualityGate(credentialsId: 'SonarQubeCredentialsId')
                      if (qg.status != 'OK') {
                          error ": ${qg.status}"
                      }else{
                          sh "echo SonarQube said OK... It can go to PROD"
                      }
                     }
                 }
            }
      }
      
    }
}
